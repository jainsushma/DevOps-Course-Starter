name: To Do app CI/CD
on: [push]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
        # connect with db client
        CLIENT: ${{ secrets.CLIENT }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: docker build --target test --tag todo-app:test .

    - name: Unit/Integration Test
      run: docker run todo-app:test tests
    
    - name: End to End Test
      run: docker run -e SECRET_KEY -e CLIENT todo-app:test tests_e2e

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
        ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
        ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
        ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
        TF_VAR_CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
        TF_VAR_CLIENT_ID: ${{secrets.CLIENT_ID}}
        TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TF_VAR_LOGGLY_TOKEN: ${{ secrets.LOGGLY_TOKEN }}

    needs: build
    # if: github.ref == 'refs/heads/master' # include this line if you want to limit the deployment to the master branch
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      run: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
    
    - name: Build the Docker image
      run: docker build --target production --tag sjain309/todo-app-prod:latest .

    - name: Push the Docker image to DockerHub
      run: docker push sjain309/todo-app-prod:latest

    # - name: Pull the Docker image from DockerHub
    #   run: docker pull sjain309/todo-app-prod

    # - name: Tag the Docker image for Heroku
    #   run: docker tag sjain309/todo-app-prod registry.heroku.com/heroku-app-devops/web

    # - name: Login to Heroku container
    #   run: heroku container:login

    # - name: Push it to Heroku registry
    #   run: docker push registry.heroku.com/heroku-app-devops/web

    # - name: Release Heroku container
    #   run: heroku container:release web --app heroku-app-devops

    - name: Initialize Terraform
      run: terraform init

    - name: Configure Terraform
      run: terraform apply -auto-approve

    - name: Release Azure container
      run: curl -dH -X POST $(terraform output -raw cd_webhook)



